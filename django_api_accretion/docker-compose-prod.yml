# docker-compose for production environment 

version: "3.8" 
services:  
  app: 
    build: .     
    volumes:
      - ./django_api_accretion:/django_api_accretion/ # map the project folder to the docker image ## only for development 
      - static_data:/vol/web      
    image: application:accretionbackend  
    # restart: always    
    ports: ## bind gunicorn with django app with TCP connection ## 
      - 8000:8000 # map port 8000 to 8000 
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "django_api_accretion.wsgi:application"] #bind all IP address 0.0.0.0 to the port 8000 
    env_file:
      - ./.env    
    depends_on:
      - db
  
  db: 
      image: postgres 
      environment:
        - POSTGRES_DB=${DB_NAME}
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASSWORD} 
      ports:
        - "5432:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data 
  
  nginx: 
    image: nginx:latest 
    build: 
      context: ./proxy
      dockerfile: Dockerfile.nginx.prod
    restart: unless-stopped
    ports: 
      - "80:80" 
      - "443:443"
    volumes:       
      - nginx_logs:/var/log/nginx
      - static_data:/vol # Mount static files directory      
      - /etc/letsencrypt:/etc/letsencrypt # map the prod certs to nginx container          
    depends_on:
      - app 


## create volumes for database, static, media files, and nginx error logs
## volumes are automatically managed by Docker, not related to the host machine 
volumes: 
  postgres_data: 
  static_data:
  nginx_logs: